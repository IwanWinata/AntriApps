/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.15
 * Generated at: 2024-01-19 12:45:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>AntriApps</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css\">\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js\"></script>\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            font-family: Arial, sans-serif;\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 0;\n");
      out.write("            background-color: #f4f4f4;\n");
      out.write("        }\n");
      out.write("        header {\n");
      out.write("            background-color: #333;\n");
      out.write("            color: #fff;\n");
      out.write("            text-align: center;\n");
      out.write("            padding: 20px 0;\n");
      out.write("        }\n");
      out.write("        .container {\n");
      out.write("            max-width: 600px;\n");
      out.write("            margin: 0 auto;\n");
      out.write("            padding: 20px;\n");
      out.write("            background-color: #fff;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n");
      out.write("        }\n");
      out.write("        .form-button {\n");
      out.write("            display: block;\n");
      out.write("            width: 100%;\n");
      out.write("            padding: 10px;\n");
      out.write("            margin-top: 10px;\n");
      out.write("            background-color: #333;\n");
      out.write("            color: #fff;\n");
      out.write("            border: none;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            cursor: pointer;\n");
      out.write("            font-size: 16px;\n");
      out.write("            text-align: center;\n");
      out.write("            text-decoration: none;\n");
      out.write("        }\n");
      out.write("        h3 {\n");
      out.write("            margin-top: 20px;\n");
      out.write("            font-size: 24px;\n");
      out.write("        }\n");
      out.write("        .small-popup {\n");
      out.write("            max-width: 80%;\n");
      out.write("            width: 50%;\n");
      out.write("            margin-left: 0%;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<header>\n");
      out.write("    <h1>Antri Apps</h1>\n");
      out.write("</header>\n");
      out.write("\n");
      out.write("<div class=\"container\">\n");
      out.write("    <form id=\"ambilNomorForm\" action=\"/AntriApps/AntrianServlet\" method=\"post\">\n");
      out.write("        <input type=\"hidden\" name=\"action\" value=\"ambil\">\n");
      out.write("        <button type=\"button\" onclick=\"ambilNomor()\">Ambil Nomor Antrian</button>\n");
      out.write("    </form>\n");
      out.write("\n");
      out.write("    <form id=\"panggilNomorForm\" action=\"/AntriApps/AntrianServlet\" method=\"post\">\n");
      out.write("        <input type=\"hidden\" name=\"action\" value=\"panggil\">\n");
      out.write("        <button type=\"button\" onclick=\"panggilNomor()\">Panggil Nomor Antrian</button>\n");
      out.write("    </form>\n");
      out.write("\n");
      out.write("    <form action=\"/AntriApps/AntrianServlet\" method=\"post\">\n");
      out.write("        <input type=\"hidden\" name=\"action\" value=\"lihat\">\n");
      out.write("        <button class=\"form-button\" type=\"submit\">Lihat Antrian</button>\n");
      out.write("    </form>\n");
      out.write("\n");
      out.write("    <h3>Nomor Antrian: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${nomorAntrian}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h3>\n");
      out.write("    <h3>Daftar Antrian: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${daftarAntrian}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h3>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    function ambilNomor() {\n");
      out.write("        console.log('Fungsi ambilNomor() dijalankan.');\n");
      out.write("        fetch('/AntriApps/AntrianServlet', {\n");
      out.write("            method: 'POST',\n");
      out.write("            body: new URLSearchParams({\n");
      out.write("                'action': 'ambil'\n");
      out.write("            }),\n");
      out.write("            headers: {\n");
      out.write("                'Content-Type': 'application/x-www-form-urlencoded'\n");
      out.write("            }\n");
      out.write("        })\n");
      out.write("        .then(response => response.json())\n");
      out.write("        .then(data => {\n");
      out.write("            console.log('Data yang Diterima:', data);\n");
      out.write("            if (data && data.nomorAntrian !== undefined) {\n");
      out.write("                \n");
      out.write("            	Swal.fire({\n");
      out.write("            		title: 'Antrian Ke ' + data.nomorAntrian + ' Nih',\n");
      out.write("            	    html: `\n");
      out.write("            	        <div style=\"font-size: 1.5em; text-align: center; margin-top: 10px;\">Terima kasih telah mengambil nomor antrian!</div>\n");
      out.write("            	    `, \n");
      out.write("            	    showConfirmButton: true,\n");
      out.write("            	    backdrop: true,\n");
      out.write("            	    allowOutsideClick: false,\n");
      out.write("            	    customClass: {\n");
      out.write("            	        popup: 'small-popup'\n");
      out.write("            	    }\n");
      out.write("            	});\n");
      out.write("            } else {\n");
      out.write("                console.error('Nomor antrian tidak valid.');\n");
      out.write("            }\n");
      out.write("        })\n");
      out.write("        .catch(error => {\n");
      out.write("            console.error('Error:', error);\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function panggilNomor() {\n");
      out.write("        var password = prompt(\"Masukkan kata sandi:\");\n");
      out.write("\n");
      out.write("        if (password !== null) {\n");
      out.write("            fetch('/AntriApps/AntrianServlet', {\n");
      out.write("                method: 'POST',\n");
      out.write("                body: new URLSearchParams({\n");
      out.write("                    'action': 'panggil',\n");
      out.write("                    'password': password\n");
      out.write("                }),\n");
      out.write("                headers: {\n");
      out.write("                    'Content-Type': 'application/x-www-form-urlencoded'\n");
      out.write("                }\n");
      out.write("            })\n");
      out.write("            .then(response => response.json())\n");
      out.write("            .then(data => {\n");
      out.write("                \n");
      out.write("                alert('Nomor Antrian ' + data.nomorAntrian + ' dipanggil.');\n");
      out.write("            })\n");
      out.write("            .catch(error => {\n");
      out.write("                console.error('Error:', error);\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
